source('~/workspace/thesis/python/R/DID_binned_2017-2019.R')
setwd("~/workspace/thesis/python/data")
source('~/workspace/thesis/python/R/DID_binned_2017-2019.R')
source('~/workspace/thesis/python/R/DID_binned_2017-2019.R')
source('~/workspace/thesis/python/R/DID_binned_2017-2019.R')
graph <- dwplot(coef,
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) +
labs(title="Month by Month GDPR Effect on Pageviews Per Million")
plot(graph)
coef <- tidy(didreg)
coef = filter(coef, term %in% c('jan2017_treated', 'feb2017_treated', 'mar2017_treated', 'apr2017_treated', 'may2017_treated', 'jun2017_treated', 'jul2017_treated', 'aug2017_treated', 'sep2017_treated', 'oct2017_treated', 'nov2017_treated', 'dec2017_treated',
'jan2018_treated', 'feb2018_treated', 'mar2018_treated', 'apr2018_treated', 'may2018_treated', 'jun2018_treated', 'jul2018_treated', 'aug2018_treated', 'sep2018_treated', 'oct2018_treated', 'nov2018_treated', 'dec2018_treated',
'jan2019_treated', 'feb2019_treated', 'mar2019_treated', 'apr2019_treated', 'may2019_treated', 'jun2019_treated', 'jul2019_treated', 'aug2019_treated', 'sep2019_treated', 'oct2019_treated', 'nov2019_treated', 'dec2019_treated'))
graph <- dwplot(coef,
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) +
labs(title="Month by Month GDPR Effect on Pageviews Per Million") +
theme(text=element_text(family="Times New Roman"))
graph <- dwplot(coef,
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) +
labs(title="Month by Month GDPR Effect on Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- dwplot(coef,
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- dwplot(coef,
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman")) +
relabel_predictors(c(wt = "Weight",                       # relabel predictors
cyl = "Cylinders",
disp = "Displacement",
hp = "Horsepower",
gear = "Gears",
am = "Manual"))
graph <- dwplot(coef,
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman")) +
relabel_predictors(c(jan2017_treated = "Kan2017"))
graph <- dwplot(coef, labels=c('jan2017'),
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman")) +
relabel_predictors(c(jan2017_treated = "an2017"))
plot(graph)
graph <- dwplot(coef, labels=c('jan2017'),
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- dwplot(coef, labels=c('jan2017'),
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) %>% # plot line at zero _behind_ coefs
relabel_predictors(c(wt = "Weight",
cyl = "Cylinders",
disp = "Displacement",
hp = "Horsepower",
gear = "Gears",
am = "Manual")) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- dwplot(coef, labels=c('jan2017'),
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) %>% # plot line at zero _behind_ coefs
relabel_predictors(c(jan2017_treated = "Jan2017",
cyl = "Cylinders",
disp = "Displacement",
hp = "Horsepower",
gear = "Gears",
am = "Manual")) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- dwplot(coef, labels=c('jan2017'),
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) %>% # plot line at zero _behind_ coefs
relabel_predictors(c(jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",
jan2017_treated = "Jan2017",)) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman"))
graph <- dwplot(coef, labels=c('jan2017'),
vline = geom_vline(xintercept = -0.070197, colour = "grey60", linetype = 2), horizontal=FALSE) %>% # plot line at zero _behind_ coefs
relabel_predictors(c(jan2017_treated = "Jan2017",
feb2017_treated = "Feb2017",
mar2017_treated = "Mar2017",
apr2017_treated = "Apr2017",
may2017_treated = "May2017",
jun2017_treated = "Jun2017",
jul2017_treated = "Jul2017",
aug2017_treated = "Aug2017",
sep2017_treated = "Sep2017",
oct2017_treated = "Oct2017",
nov2017_treated = "Nov2017",
dec2017_treated = "Dec2017",
jan2018_treated = "Jan2018",
feb2018_treated = "Fed2018",
mar2018_treated = "Mar2018",
may2018_treated = "May2018",
jun2018_treated = "Jun2018",
jul2018_treated = "Jul2018",
aug2018_treated = "Aug2018",
sep2018_treated = "Sep2018",
oct2018_treated = "Oct2018",
nov2018_treated = "Nov2018",
dec2018_treated = "Dec2018",
jan2019_treated = "Jan2019",
feb2019_treated = "Fed2019",
mar2019_treated = "Mar2019",
apr2019_treated = "Apr2019",
may2019_treated = "May2019",
jun2019_treated = "Jun2019",
jul2019_treated = "Jul2019",
aug2019_treated = "Aug2019",
sep2019_treated = "Sep2019",
oct2019_treated = "Oct2019",
nov2019_treated = "Nov2019",
dec2019_treated = "Dec2019")) +
labs(title="Month by Month GDPR Impact on Pageviews Per Million", x="Coefficient", y="Month") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
source('~/workspace/thesis/python/R/DID_binned_2017-2019.R')
source('~/workspace/thesis/python/R/DDD_binned_2017-2019.R')
source('~/workspace/thesis/python/R/DDD_binned_2017-2019.R')
source('~/workspace/thesis/python/R/DDD_binned_2017-2019.R')
source('~/workspace/thesis/python/R/DDD_binned_2017-2019.R')
plot(graph)
source('~/workspace/thesis/python/R/parallel_trends.R')
plot(graph1)
graph1 <- ggplot(data=activity_filtered, aes(x=Date, y=PageviewsPerMillion, group=Url)) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews ",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph1)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2)) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2, color=Group.2)) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2, fill=Group.2)) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2)) +
geom_line(color="Group.2") +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2)) +
geom_line(color="red") +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2, color=Group.2)) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2, color=Group.2)) +
scale_color_manual(values = c("US", "EU" )) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
source('~/workspace/thesis/python/R/parallel_trends.R')
View(US)
graph <- ggplot() +
geom_line(data=US, aes(x=Date, y=PageviewsPerMillion, color="blue")) +
geom_line(data=EU, aes(x=Date, y=PageviewsPerMillion, color="blue")) +
scale_color_manual(values = c("US", "EU" )) +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
source('~/workspace/thesis/python/R/parallel_trends.R')
graph <- ggplot() +
geom_line(data=US, aes(x=Date, y=PageviewsPerMillion, color="blue")) +
geom_line(data=EU, aes(x=Date, y=PageviewsPerMillion, color="blue")) +
# scale_color_manual(values = c("US", "EU" )) +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- ggplot() +
geom_line(data=US, aes(x=Date, y=PageviewsPerMillion)) +
geom_line(data=EU, aes(x=Date, y=PageviewsPerMillion)) +
# scale_color_manual(values = c("US", "EU" )) +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
source('~/workspace/thesis/python/R/parallel_trends.R')
source('~/workspace/thesis/python/R/parallel_trends.R')
source('~/workspace/thesis/python/R/parallel_trends.R')
View(agg)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2, color=treated)) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
View(agg)
source('~/workspace/thesis/python/R/parallel_trends.R')
source('~/workspace/thesis/python/R/parallel_trends.R')
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2, color=Group)) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews US vs EU (2017-2019)",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
graph <- ggplot(data=agg, aes(x=Group.date, y=PageviewsPerMillion, group=Group.2, color=Group)) +
geom_line() +
geom_vline(xintercept = as.Date("2018-05-25")) +
labs(title="Aggregate Pageviews, US vs EU (2017-2019)",
x ="Date", y = "Pageviews Per Million") +
theme(text=element_text(size=12, family="Times New Roman"))
plot(graph)
source('~/workspace/thesis/python/R/parallel_trends.R')
source('~/workspace/thesis/python/R/DDD_binned_2017-2019.R')
source('~/workspace/thesis/python/R/DID_binned_2017-2019.R')
source('~/workspace/thesis/python/R/marketshare.R')
View(agg)
View(activity_filtered)
source('~/workspace/thesis/python/R/marketshare.R')
source('~/workspace/thesis/python/R/marketshare.R')
View(activity)
View(activity)
source('~/workspace/thesis/python/R/marketshare.R')
sum(adex$xad)
sum(adex[, 'xad'])
sum(adex$xad, na.rm = TRUE)
View(adex)
View(adex)
source('~/workspace/thesis/python/R/marketshare.R')
sum(adex$xad, na.rm = TRUE)
